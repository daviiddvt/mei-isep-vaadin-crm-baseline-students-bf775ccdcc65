buildscript {
    repositories {
        mavenCentral()
        maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
        maven { setUrl("https://maven.vaadin.com/vaadin-addons") }
    }
}
plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'com.vaadin'
}

defaultTasks("clean", "build")

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
    maven { setUrl("https://maven.vaadin.com/vaadin-addons") }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools' //faster reloas

    implementation "com.vaadin:vaadin-core:20.+"
    implementation "com.vaadin:vaadin:$vaadinVersion"
    implementation "com.vaadin:vaadin-spring-boot-starter:$vaadinVersion"
    implementation 'org.vaadin.artur.exampledata:exampledata:3.4.0'
    implementation('com.vaadin:vaadin-spring-boot-starter')

    implementation 'com.h2database:h2:2.1.214'

    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-validation:$springBootVersion"
    //implementation "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-devtools:$springBootVersion"

    implementation enforcedPlatform("com.vaadin:vaadin-bom:$vaadinVersion")

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: "$junitVersion"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "$junitVersion"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "$junitVersion"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        //implementation "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
    }
//    providedCompile "javax.servlet:javax.servlet-api:3.1.0"

    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "io.github.bonigarcia:webdrivermanager:3.8.1"

    //providedCompile "javax.servlet:javax.servlet-api:3.1.0"
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:$vaadinVersion"
    }
}

test {
    useJUnitPlatform()
    include "*Test"
}

// The following pnpmEnable = true is not needed as pnpm is used by default,
// this is just an example of how to configure the Gradle Vaadin Plugin:
// for more configuration options please see: https://vaadin.com/docs/latest/guide/start/gradle/#all-options
vaadin {
    pnpmEnable = false; //false triggers more performance during development
}

tasks.withType(JavaCompile) {
    options.deprecation = true
    options.encoding = 'UTF-8'
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}